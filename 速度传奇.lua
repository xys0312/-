local TweenService = game:GetService("TweenService") local atween = TweenInfo.new(.2,Enum.EasingStyle.Sine,Enum.EasingDirection.Out) local lib = {} local linstance = {} local UIS = game:GetService("UserInputService") local dragSpeed = -math.huge local dragToggle = nil local dragInput = nil local dragStart = nil local dragPos = nil function dragify(Frame) 	function updateInput(input) 		local Delta = input.Position - dragStart 		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y) 		Frame.Position = Position 	end 	Frame.InputBegan:Connect(function(input) 		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then 			dragToggle = true 			dragStart = input.Position 			startPos = Frame.Position 			input.Changed:Connect(function() 				if input.UserInputState == Enum.UserInputState.End then 					dragToggle = false 				end 			end) 		end 	end) 	Frame.InputChanged:Connect(function(input) 		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then 			dragInput = input 		end 	end) 	game:GetService("UserInputService").InputChanged:Connect(function(input) 		if input == dragInput and dragToggle then 			updateInput(input) 		end 	end) end local function hoverbtncolor(button,textlabel) 	local tc = textlabel.TextColor3 	 	button.MouseEnter:Connect(function() 		TweenService:Create(textlabel,atween,{TextColor3=Color3.fromRGB(255, 71, 182)}):Play() 	end) 	button.MouseLeave:Connect(function() 		TweenService:Create(textlabel,atween,{TextColor3=tc}):Play() 	end) end local function hoverbtnimgcolor(button,imagelabel) 	local tc = imagelabel.ImageColor3 	button.MouseEnter:Connect(function() 		TweenService:Create(imagelabel,atween,{ImageColor3=Color3.fromRGB(255, 71, 182)}):Play() 	end) 	button.MouseLeave:Connect(function() 		TweenService:Create(imagelabel,atween,{ImageColor3=tc}):Play() 	end) end local function ripplebtn(button,size) 	local size = size or 200 	local Holder = Instance.new("Frame",button) 	Holder.Name = "Holder" 	Holder.AnchorPoint = Vector2.new(0.5, 0.5) 	Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 	Holder.BackgroundTransparency = 1.000 	Holder.Position = UDim2.new(0.5, 0, 0.5, 0) 	Holder.Size = UDim2.new(1, 0, 1, 0) 	Holder.ClipsDescendants = true 	 	button.MouseButton1Down:Connect(function(x,y) 		local x,y = x-Holder.AbsolutePosition.X,y-Holder.AbsolutePosition.Y-Holder.AbsoluteSize.Y 		local Ripple = Instance.new("Frame",Holder) 		local UICorner = Instance.new("UICorner") 		Ripple.Name = "Ripple" 		Ripple.AnchorPoint = Vector2.new(0.5, 0.5) 		Ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Ripple.BackgroundTransparency = 0.500 		Ripple.Position = UDim2.fromOffset(x,y) 		UICorner.CornerRadius = UDim.new(1, 0) 		UICorner.Parent = Ripple 		 		local sec = .5 		 		TweenService:Create(Ripple,TweenInfo.new(unpack({ 			sec, 			Enum.EasingStyle.Sine, 			Enum.EasingDirection.Out 		})),{BackgroundTransparency=1,Size=UDim2.new(0,size,0,size)}):Play() 		 		game:GetService("Debris"):AddItem(Ripple,sec) 	end) end linstance.create = function(self,name,props) 	name = name:lower() 	if name == "gui" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local ScreenGui = Instance.new("ScreenGui") 		local Frame = Instance.new("Frame") 		local sidebar = Instance.new("Frame") 		local header = Instance.new("ImageLabel") 		local UIListLayout = Instance.new("UIListLayout") 		local TextLabel = Instance.new("TextLabel") 		local TextLabel_2 = Instance.new("TextLabel") 		local ScrollingFrame = Instance.new("ScrollingFrame") 		local UIListLayout_2 = Instance.new("UIListLayout") 		local body = Instance.new("Frame") 		local pagecontainer = Instance.new("Frame") 		local UIPadding = Instance.new("UIPadding") 		local UICorner = Instance.new("UICorner") 		--Properties: 		ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") 		ScreenGui.ResetOnSpawn = false 		Frame.Parent = ScreenGui 		Frame.BackgroundColor3 = Color3.fromRGB(11, 11, 11) 		Frame.BorderSizePixel = 0 		Frame.Position = UDim2.new(0.236220479, 0, 0.229244113, 0) 		Frame.Size = UDim2.new(0, 530, 0, 330) 		 		dragify(Frame) 		sidebar.Name = "sidebar" 		sidebar.Parent = Frame 		sidebar.AnchorPoint = Vector2.new(0, 0.5) 		sidebar.BackgroundColor3 = Color3.fromRGB(24, 24, 24) 		sidebar.BorderSizePixel = 0 		sidebar.Position = UDim2.new(0, 0, 0.5, 0) 		sidebar.Size = UDim2.new(0, 140, 1, 0) 		header.Name = "header" 		header.Parent = sidebar 		header.AnchorPoint = Vector2.new(0.5, 0) 		header.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		header.BorderSizePixel = 0 		header.Position = UDim2.new(0.5, 0, 0, 0) 		header.Size = UDim2.new(1, 0, 0, 100) 		header.Image = "http://www.roblox.com/asset/?id=9423924419" 		header.ScaleType = Enum.ScaleType.Crop 		UIListLayout.Parent = header 		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center 		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder 		UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center 		UIListLayout.Padding = UDim.new(0, 14) 		TextLabel.Parent = header 		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.BackgroundTransparency = 1.000 		TextLabel.Font = Enum.Font.Gotham 		TextLabel.Text = "love<b>hub</b>" 		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.TextSize = 16.000 		TextLabel.RichText = true 		TextLabel_2.Parent = header 		TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel_2.BackgroundTransparency = 1.000 		TextLabel_2.Font = Enum.Font.SourceSansItalic 		TextLabel_2.Text = "Synapse X" 		TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel_2.TextSize = 13.000 		ScrollingFrame.Parent = sidebar 		ScrollingFrame.AnchorPoint = Vector2.new(0, 1) 		ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		ScrollingFrame.BackgroundTransparency = 1.000 		ScrollingFrame.BorderSizePixel = 0 		ScrollingFrame.Position = UDim2.new(0, 0, 1, 0) 		ScrollingFrame.Size = UDim2.new(1, 0, 1, -100) 		ScrollingFrame.BottomImage = "rbxassetid://9414462019" 		ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) 		ScrollingFrame.MidImage = "rbxassetid://9414462019" 		ScrollingFrame.ScrollBarThickness = 4 		ScrollingFrame.TopImage = "rbxassetid://9414462019" 		ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y 		ScrollingFrame.ScrollBarImageTransparency = 0.9 		UIListLayout_2.Parent = ScrollingFrame 		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder 		body.Name = "body" 		body.Parent = Frame 		body.AnchorPoint = Vector2.new(1, 0) 		body.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		body.BackgroundTransparency = 1.000 		body.BorderColor3 = Color3.fromRGB(27, 42, 53) 		body.Position = UDim2.new(1, 0, 0, 0) 		body.Size = UDim2.new(1, -140, 1, 0) 		pagecontainer.Name = "pagecontainer" 		pagecontainer.Parent = body 		pagecontainer.AnchorPoint = Vector2.new(0.5, 0.5) 		pagecontainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		pagecontainer.BackgroundTransparency = 1.000 		pagecontainer.Position = UDim2.new(0.5, 0, 0.5, 0) 		pagecontainer.Size = UDim2.new(1, 0, 1, 0) 		pagecontainer.ClipsDescendants = true 		UIPadding.Parent = pagecontainer 		UIPadding.PaddingBottom = UDim.new(0, 8) 		UIPadding.PaddingLeft = UDim.new(0, 8) 		UIPadding.PaddingRight = UDim.new(0, 8) 		UIPadding.PaddingTop = UDim.new(0, 8) 		UICorner.CornerRadius = UDim.new(0, 12) 		UICorner.Parent = Frame 		-- Scripts: 		local function HTUYPL_fake_script() -- TextLabel_2.LocalScript 			local script = Instance.new('LocalScript', TextLabel_2) 			local function getexploit() 				local exploit = 					(syn and not is_sirhurt_closure and not pebc_execute and "Synapse X") or 					(secure_load and "Sentinel") or 					(is_sirhurt_closure and "Sirhurt") or 					(pebc_execute and "ProtoSmasher") or 					(KRNL_LOADED and "Krnl ") or 					(WrapGlobal and "WeAreDevs") or 					(isvm and "Proxo") or 					(shadow_env and "Shadow") or 					(jit and "EasyExploits") or 					(getscriptenvs and "Calamari") or 					(unit and not syn and "Unit") or 					(OXYGEN_LOADED and "Oxygen U") or 					(IsElectron and "Electron") or 					("Unknown Executor") 				return exploit 			end 			script.Parent.Text = getexploit() 		end 		coroutine.wrap(HTUYPL_fake_script)() 		return ScreenGui 	elseif name == "tbutton" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local pagebutton = Instance.new("Frame") 		local Frame = Instance.new("Frame") 		local TextLabel = Instance.new("TextLabel") 		local UIPadding = Instance.new("UIPadding") 		local Button = Instance.new("TextButton") 		--Properties: 		pagebutton.Name = "pagebutton" 		pagebutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		pagebutton.BackgroundTransparency = 1.000 		pagebutton.Size = UDim2.new(1, 0, 0, 34) 		Frame.Parent = pagebutton 		Frame.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame.BackgroundTransparency = 1.000 		Frame.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame.Size = UDim2.new(1, 0, 1, 0) 		TextLabel.Parent = Frame 		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.BackgroundTransparency = 1.000 		TextLabel.Size = UDim2.new(1, 0, 1, 0) 		TextLabel.Font = Enum.Font.Gotham 		TextLabel.Text = "Settings" 		TextLabel.TextColor3 = Color3.fromRGB(216, 216, 216) 		TextLabel.TextSize = 12.000 		TextLabel.TextXAlignment = Enum.TextXAlignment.Left 		UIPadding.Parent = Frame 		UIPadding.PaddingLeft = UDim.new(0, 12) 		Button.Name = "Button" 		Button.Parent = pagebutton 		Button.AnchorPoint = Vector2.new(0.5, 0.5) 		Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Button.BackgroundTransparency = 1.000 		Button.Position = UDim2.new(0.5, 0, 0.5, 0) 		Button.Size = UDim2.new(1, 0, 1, 0) 		Button.Font = Enum.Font.SourceSans 		Button.TextColor3 = Color3.fromRGB(0, 0, 0) 		Button.TextSize = 14.000 		Button.TextTransparency = 1.000 		 		ripplebtn(Button) 		 		Button.MouseEnter:Connect(function() 			TweenService:Create(pagebutton,atween,{Size=UDim2.new(1, 0, 0, 40)}):Play() 			TweenService:Create(TextLabel,atween,{TextSize=16}):Play() 		end) 		 		Button.MouseLeave:Connect(function() 			TweenService:Create(pagebutton,atween,{Size=UDim2.new(1, 0, 0, 34)}):Play() 			TweenService:Create(TextLabel,atween,{TextSize=12}):Play() 		end) 		return pagebutton 	elseif name == "page" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local page = Instance.new("Frame") 		local ScrollingFrame = Instance.new("ScrollingFrame") 		local UIListLayout = Instance.new("UIListLayout") 		--Properties: 		page.Name = "page" 		page.AnchorPoint = Vector2.new(0.5, 0.5) 		page.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		page.BackgroundTransparency = 1.000 		page.Position = UDim2.new(0.5, 0, 0.5, 0) 		page.Size = UDim2.new(1, 0, 1, 0) 		ScrollingFrame.Parent = page 		ScrollingFrame.AnchorPoint = Vector2.new(0.5, 0.5) 		ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		ScrollingFrame.BackgroundTransparency = 1.000 		ScrollingFrame.BorderSizePixel = 0 		ScrollingFrame.Position = UDim2.new(0.5, 0, 0.5, 0) 		ScrollingFrame.Size = UDim2.new(1, 0, 1, 0) 		ScrollingFrame.BottomImage = "rbxassetid://9414462019" 		ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) 		ScrollingFrame.MidImage = "rbxassetid://9414462019" 		ScrollingFrame.ScrollBarThickness = 4 		ScrollingFrame.TopImage = "rbxassetid://9414462019" 		ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y 		UIListLayout.Parent = ScrollingFrame 		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center 		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder 		UIListLayout.Padding = UDim.new(0, 4) 		 		return page 	elseif name == "button" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local button = Instance.new("Frame") 		local UICorner = Instance.new("UICorner") 		local Frame = Instance.new("Frame") 		local Frame_2 = Instance.new("Frame") 		local UIPadding = Instance.new("UIPadding") 		local TextLabel = Instance.new("TextLabel") 		local TextButton = Instance.new("TextButton") 		local other = Instance.new("Frame") 		local Frame_3 = Instance.new("Frame") 		local UIPadding_2 = Instance.new("UIPadding") 		local Icon = Instance.new("ImageLabel") 		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint") 		--Properties: 		button.Name = "button" 		button.BackgroundColor3 = Color3.fromRGB(24, 24, 24) 		button.Size = UDim2.new(1, 0, 0, 34) 		UICorner.Parent = button 		Frame.Parent = button 		Frame.AnchorPoint = Vector2.new(0, 0.5) 		Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame.BackgroundTransparency = 1.000 		Frame.Position = UDim2.new(0, 0, 0.5, 0) 		Frame.Size = UDim2.new(1, -34, 1, 0) 		Frame_2.Parent = Frame 		Frame_2.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_2.BackgroundTransparency = 1.000 		Frame_2.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_2.Size = UDim2.new(1, 0, 1, 0) 		UIPadding.Parent = Frame_2 		UIPadding.PaddingLeft = UDim.new(0, 14) 		TextLabel.Parent = Frame_2 		TextLabel.AnchorPoint = Vector2.new(0, 0.5) 		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.BackgroundTransparency = 1.000 		TextLabel.Position = UDim2.new(0, 0, 0.5, 0) 		TextLabel.Size = UDim2.new(1, 0, 1, 0) 		TextLabel.Font = Enum.Font.Gotham 		TextLabel.Text = "button" 		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.TextSize = 12.000 		TextLabel.TextXAlignment = Enum.TextXAlignment.Left 		TextButton.Parent = Frame 		TextButton.AnchorPoint = Vector2.new(0.5, 0.5) 		TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextButton.BackgroundTransparency = 1.000 		TextButton.Position = UDim2.new(0.5, 0, 0.5, 0) 		TextButton.Size = UDim2.new(1, 0, 1, 0) 		TextButton.Font = Enum.Font.SourceSans 		TextButton.TextColor3 = Color3.fromRGB(0, 0, 0) 		TextButton.TextSize = 14.000 		TextButton.TextTransparency = 1.000 		other.Name = "other" 		other.Parent = button 		other.AnchorPoint = Vector2.new(1, 0.5) 		other.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		other.BackgroundTransparency = 1.000 		other.Position = UDim2.new(1, 0, 0.5, 0) 		other.Size = UDim2.new(0, 34, 0, 34) 		Frame_3.Parent = other 		Frame_3.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_3.BackgroundTransparency = 1.000 		Frame_3.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_3.Size = UDim2.new(1, 0, 1, 0) 		UIPadding_2.Parent = Frame_3 		UIPadding_2.PaddingBottom = UDim.new(0, 8) 		UIPadding_2.PaddingLeft = UDim.new(0, 8) 		UIPadding_2.PaddingRight = UDim.new(0, 8) 		UIPadding_2.PaddingTop = UDim.new(0, 8) 		Icon.Name = "Icon" 		Icon.Parent = Frame_3 		Icon.AnchorPoint = Vector2.new(0.5, 0.5) 		Icon.BackgroundTransparency = 1.000 		Icon.Position = UDim2.new(0.5, 0, 0.5, 0) 		Icon.Size = UDim2.new(1, 0, 1, 0) 		Icon.Image = "rbxassetid://7733964719" 		Icon.ImageColor3 = Color3.fromRGB(122, 122, 122) 		UIAspectRatioConstraint.Parent = Icon 		 		ripplebtn(TextButton) 		hoverbtncolor(TextButton,TextLabel) 		 		return button 	elseif name == "hlabel" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local headerlabel = Instance.new("Frame") 		local TextLabel = Instance.new("TextLabel") 		local UIPadding = Instance.new("UIPadding") 		--Properties: 		headerlabel.Name = "headerlabel" 		headerlabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		headerlabel.BackgroundTransparency = 1.000 		headerlabel.Size = UDim2.new(1, 0, 0, 40) 		TextLabel.Parent = headerlabel 		TextLabel.AnchorPoint = Vector2.new(0, 0.5) 		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.BackgroundTransparency = 1.000 		TextLabel.Position = UDim2.new(0, 0, 0.5, 0) 		TextLabel.Size = UDim2.new(1, 0, 1, 0) 		TextLabel.Font = Enum.Font.Gotham 		TextLabel.Text = (props.title or "TEXT"):upper() 		TextLabel.TextColor3 = Color3.fromRGB(70, 70, 70) 		TextLabel.TextSize = 12.000 		TextLabel.TextXAlignment = Enum.TextXAlignment.Left 		UIPadding.Parent = headerlabel 		UIPadding.PaddingLeft = UDim.new(0, 14) 		 		return headerlabel 	elseif name == "checkbox" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local checkbox = Instance.new("Frame") 		local UICorner = Instance.new("UICorner") 		local Frame = Instance.new("Frame") 		local Frame_2 = Instance.new("Frame") 		local UIPadding = Instance.new("UIPadding") 		local TextLabel = Instance.new("TextLabel") 		local other = Instance.new("Frame") 		local Frame_3 = Instance.new("Frame") 		local UIPadding_2 = Instance.new("UIPadding") 		local Icon = Instance.new("ImageLabel") 		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint") 		local checkbox_2 = Instance.new("Frame") 		local Frame_4 = Instance.new("Frame") 		local UIPadding_3 = Instance.new("UIPadding") 		local Icon_2 = Instance.new("ImageLabel") 		local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint") 		local TextButton = Instance.new("TextButton") 		--Properties: 		checkbox.Name = "checkbox" 		checkbox.BackgroundColor3 = Color3.fromRGB(24, 24, 24) 		checkbox.Size = UDim2.new(1, 0, 0, 34) 		UICorner.Parent = checkbox 		Frame.Parent = checkbox 		Frame.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame.BackgroundTransparency = 1.000 		Frame.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame.Size = UDim2.new(1, -68, 1, 0) 		Frame_2.Parent = Frame 		Frame_2.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_2.BackgroundTransparency = 1.000 		Frame_2.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_2.Size = UDim2.new(1, 0, 1, 0) 		UIPadding.Parent = Frame_2 		TextLabel.Parent = Frame_2 		TextLabel.AnchorPoint = Vector2.new(0, 0.5) 		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.BackgroundTransparency = 1.000 		TextLabel.Position = UDim2.new(0, 0, 0.5, 0) 		TextLabel.Size = UDim2.new(1, 0, 1, 0) 		TextLabel.Font = Enum.Font.Gotham 		TextLabel.Text = props.title or "Checkbox" 		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.TextSize = 12.000 		TextLabel.TextXAlignment = Enum.TextXAlignment.Left 		TextLabel.LineHeight = .9 		other.Name = "other" 		other.Parent = checkbox 		other.AnchorPoint = Vector2.new(1, 0.5) 		other.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		other.BackgroundTransparency = 1.000 		other.Position = UDim2.new(1, 0, 0.5, 0) 		other.Size = UDim2.new(0, 34, 0, 34) 		Frame_3.Parent = other 		Frame_3.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_3.BackgroundTransparency = 1.000 		Frame_3.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_3.Size = UDim2.new(1, 0, 1, 0) 		UIPadding_2.Parent = Frame_3 		UIPadding_2.PaddingBottom = UDim.new(0, 8) 		UIPadding_2.PaddingLeft = UDim.new(0, 8) 		UIPadding_2.PaddingRight = UDim.new(0, 8) 		UIPadding_2.PaddingTop = UDim.new(0, 8) 		Icon.Name = "Icon" 		Icon.Parent = Frame_3 		Icon.AnchorPoint = Vector2.new(0.5, 0.5) 		Icon.BackgroundTransparency = 1.000 		Icon.Position = UDim2.new(0.5, 0, 0.5, 0) 		Icon.Size = UDim2.new(1, 0, 1, 0) 		Icon.Image = "rbxassetid://7733964719" 		Icon.ImageColor3 = Color3.fromRGB(122, 122, 122) 		UIAspectRatioConstraint.Parent = Icon 		checkbox_2.Name = "checkbox" 		checkbox_2.Parent = checkbox 		checkbox_2.AnchorPoint = Vector2.new(0, 0.5) 		checkbox_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		checkbox_2.BackgroundTransparency = 1.000 		checkbox_2.Position = UDim2.new(0, 0, 0.5, 0) 		checkbox_2.Size = UDim2.new(0, 34, 0, 34) 		Frame_4.Parent = checkbox_2 		Frame_4.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_4.BackgroundTransparency = 1.000 		Frame_4.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_4.Size = UDim2.new(1, 0, 1, 0) 		UIPadding_3.Parent = Frame_4 		UIPadding_3.PaddingBottom = UDim.new(0, 10) 		UIPadding_3.PaddingLeft = UDim.new(0, 10) 		UIPadding_3.PaddingRight = UDim.new(0, 10) 		UIPadding_3.PaddingTop = UDim.new(0, 10) 		Icon_2.Name = "Icon" 		Icon_2.Parent = Frame_4 		Icon_2.AnchorPoint = Vector2.new(0.5, 0.5) 		Icon_2.BackgroundTransparency = 1.000 		Icon_2.Position = UDim2.new(0.5, 0, 0.5, 0) 		Icon_2.Size = UDim2.new(1, 0, 1, 0) 		Icon_2.Image = "rbxassetid://7743872181" 		UIAspectRatioConstraint_2.Parent = Icon_2 		TextButton.Parent = checkbox_2 		TextButton.AnchorPoint = Vector2.new(0.5, 0.5) 		TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextButton.BackgroundTransparency = 1.000 		TextButton.Position = UDim2.new(0.5, 0, 0.5, 0) 		TextButton.Size = UDim2.new(1, 0, 1, 0) 		TextButton.Font = Enum.Font.SourceSans 		TextButton.TextColor3 = Color3.fromRGB(0, 0, 0) 		TextButton.TextSize = 14.000 		TextButton.TextTransparency = 1.000 		 		local cover = Instance.new("ImageLabel",checkbox_2) 		cover.Name = "cover" 		cover.AnchorPoint = Vector2.new(0.5, 0.5) 		cover.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		cover.BackgroundTransparency = 1.000 		cover.Position = UDim2.new(0.5, 0, 0.5, 0) 		cover.Size = UDim2.new(0, 10, 0, 10) 		cover.Image = "rbxassetid://9414462019" 		cover.ImageTransparency = 1 		 		ripplebtn(TextButton,20) 		hoverbtnimgcolor(TextButton,Icon_2) 		hoverbtnimgcolor(TextButton,cover) 		 		return checkbox,cover 	elseif name == "slider" then 		-- Gui to Lua 		-- Version: 3.2 		-- Instances: 		local slider = Instance.new("Frame") 		local UICorner = Instance.new("UICorner") 		local Frame = Instance.new("Frame") 		local Frame_2 = Instance.new("Frame") 		local UIPadding = Instance.new("UIPadding") 		local TextLabel = Instance.new("TextLabel") 		local slide = Instance.new("Frame") 		local Frame_3 = Instance.new("Frame") 		local UICorner_2 = Instance.new("UICorner") 		local TextLabel_2 = Instance.new("TextLabel") 		local slide_2 = Instance.new("Frame") 		local UICorner_3 = Instance.new("UICorner") 		local UIPadding_2 = Instance.new("UIPadding") 		local TextButton = Instance.new("TextButton") 		local other = Instance.new("Frame") 		local Frame_4 = Instance.new("Frame") 		local UIPadding_3 = Instance.new("UIPadding") 		local Icon = Instance.new("ImageLabel") 		local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint") 		--Properties: 		slider.Name = "slider" 		slider.Parent = game.ServerStorage 		slider.BackgroundColor3 = Color3.fromRGB(24, 24, 24) 		slider.Size = UDim2.new(1, 0, 0, 40) 		UICorner.Parent = slider 		Frame.Parent = slider 		Frame.AnchorPoint = Vector2.new(0, 0.5) 		Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame.BackgroundTransparency = 1.000 		Frame.Position = UDim2.new(0, 0, 0.5, 0) 		Frame.Size = UDim2.new(1, -34, 1, 0) 		Frame_2.Parent = Frame 		Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_2.BackgroundTransparency = 1.000 		Frame_2.Size = UDim2.new(1, 0, 0.400000006, 0) 		UIPadding.Parent = Frame_2 		UIPadding.PaddingLeft = UDim.new(0, 14) 		UIPadding.PaddingRight = UDim.new(0, 4) 		UIPadding.PaddingTop = UDim.new(0, 4) 		TextLabel.Parent = Frame_2 		TextLabel.AnchorPoint = Vector2.new(0, 0.5) 		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.BackgroundTransparency = 1.000 		TextLabel.Position = UDim2.new(0, 0, 0.5, 0) 		TextLabel.Size = UDim2.new(1, 0, 1, 0) 		TextLabel.Font = Enum.Font.Gotham 		TextLabel.Text = props.title or "Slider" 		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel.TextSize = 10.000 		TextLabel.TextXAlignment = Enum.TextXAlignment.Left 		slide.Name = "slide" 		slide.Parent = Frame 		slide.AnchorPoint = Vector2.new(0, 1) 		slide.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		slide.BackgroundTransparency = 1.000 		slide.Position = UDim2.new(0, 0, 1, 0) 		slide.Size = UDim2.new(1, 0, 0.600000024, 0) 		Frame_3.Parent = slide 		Frame_3.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_3.BackgroundColor3 = Color3.fromRGB(40, 40, 40) 		Frame_3.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_3.Size = UDim2.new(1, 0, 1, 0) 		UICorner_2.Parent = Frame_3 		TextLabel_2.Parent = Frame_3 		TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5) 		TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel_2.BackgroundTransparency = 1.000 		TextLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0) 		TextLabel_2.Size = UDim2.new(1, 0, 1, 0) 		TextLabel_2.ZIndex = 2 		TextLabel_2.Font = Enum.Font.Gotham 		TextLabel_2.Text = "20" 		TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255) 		TextLabel_2.TextSize = 12.000 		slide_2.Name = "slide" 		slide_2.Parent = Frame_3 		slide_2.AnchorPoint = Vector2.new(0, 0.5) 		slide_2.BackgroundColor3 = Color3.fromRGB(50, 50, 50) 		slide_2.Position = UDim2.new(0, 0, 0.5, 0) 		slide_2.Size = UDim2.new(0.200000003, 0, 1, 0) 		UICorner_3.Parent = slide_2 		UIPadding_2.Parent = slide 		UIPadding_2.PaddingBottom = UDim.new(0, 4) 		UIPadding_2.PaddingLeft = UDim.new(0, 4) 		UIPadding_2.PaddingRight = UDim.new(0, 4) 		UIPadding_2.PaddingTop = UDim.new(0, 4) 		TextButton.Parent = slide 		TextButton.AnchorPoint = Vector2.new(0.5, 0.5) 		TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		TextButton.BackgroundTransparency = 1.000 		TextButton.Position = UDim2.new(0.5, 0, 0.5, 0) 		TextButton.Size = UDim2.new(1, 0, 1, 0) 		TextButton.Font = Enum.Font.SourceSans 		TextButton.TextColor3 = Color3.fromRGB(0, 0, 0) 		TextButton.TextSize = 14.000 		TextButton.TextTransparency = 1.000 		other.Name = "other" 		other.Parent = slider 		other.AnchorPoint = Vector2.new(1, 0.5) 		other.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		other.BackgroundTransparency = 1.000 		other.Position = UDim2.new(1, 0, 0.5, 0) 		other.Size = UDim2.new(0, 34, 0, 34) 		Frame_4.Parent = other 		Frame_4.AnchorPoint = Vector2.new(0.5, 0.5) 		Frame_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 		Frame_4.BackgroundTransparency = 1.000 		Frame_4.Position = UDim2.new(0.5, 0, 0.5, 0) 		Frame_4.Size = UDim2.new(1, 0, 1, 0) 		UIPadding_3.Parent = Frame_4 		UIPadding_3.PaddingBottom = UDim.new(0, 8) 		UIPadding_3.PaddingLeft = UDim.new(0, 8) 		UIPadding_3.PaddingRight = UDim.new(0, 8) 		UIPadding_3.PaddingTop = UDim.new(0, 8) 		Icon.Name = "Icon" 		Icon.Parent = Frame_4 		Icon.AnchorPoint = Vector2.new(0.5, 0.5) 		Icon.BackgroundTransparency = 1.000 		Icon.Position = UDim2.new(0.5, 0, 0.5, 0) 		Icon.Size = UDim2.new(1, 0, 1, 0) 		Icon.Image = "rbxassetid://7733964719" 		Icon.ImageColor3 = Color3.fromRGB(122, 122, 122) 		UIAspectRatioConstraint.Parent = Icon 		 		return slider 	end end lib.new = function(self) 	local glib = {}	 	local gui = linstance:create("gui") 	pcall(function() 		gui.Parent = game.CoreGui 	end) 	--gui,Parent = game.CoreGui 	 	local pselected = {} 	local pnum = 0 	glib.newpage = function(self,title) 		pnum=pnum+1 		 		local plib = { 			num = pnum 		} 		local tbutton = linstance:create("tbutton") 		tbutton.Frame.TextLabel.Text = title 		tbutton.Parent = gui.Frame.sidebar.ScrollingFrame 		 		local page = linstance:create("page") 		page.Parent = gui.Frame.body.pagecontainer 		page.Visible = false 		 		local selected = false 		 		plib.select = function(self) 			if not selected then 				if pselected.tbutton then 					TweenService:Create(pselected.tbutton.Frame.TextLabel,atween,{TextColor3=Color3.fromRGB(216, 216, 216)}):Play() 				end 				if pselected.page then 					pselected.page.Visible = false 				end 				TweenService:Create(tbutton.Frame.TextLabel,atween,{TextColor3=Color3.fromRGB(255, 71, 182)}):Play() 				page.Visible = true 				pselected.tbutton = tbutton 				pselected.page = page 			end 		end 		 		tbutton.Button.MouseButton1Down:Connect(function() 			plib:select() 		end) 		 		local innum = 0 		 		plib.addbutton = function(self,title,desc,callback) 			innum=innum+1 			local button = linstance:create("button") 			button.LayoutOrder = innum 			button.Parent = page.ScrollingFrame 			button.Frame.Frame.TextLabel.Text = title 			button.Frame.TextButton.MouseButton1Down:Connect(function() 				callback() 			end) 		end 		 		plib.addlabel = function(self,title) 			innum=innum+1 			local label = linstance:create("hlabel",{title=title}) 			label.LayoutOrder = innum 			label.Parent = page.ScrollingFrame 		end 		 		plib.addcheckbox = function(self,title,default,callback) 			innum=innum+1 			local toggled = default 			local checkbox = linstance:create("checkbox",{title=title}) 			checkbox.LayoutOrder = innum 			checkbox.Parent = page.ScrollingFrame 			checkbox.checkbox.TextButton.MouseButton1Down:Connect(function() 				toggled = not toggled 				if toggled then 					TweenService:Create(checkbox.checkbox.cover,atween,{ImageTransparency=0}):Play() 				else 					TweenService:Create(checkbox.checkbox.cover,atween,{ImageTransparency=1}):Play() 				end 				callback(toggled) 			end) 		end 		 		plib.addslider = function(self,title,default,min,max,inc,callback) 			innum=innum+1 			local slider = linstance:create("slider",{title=title}) 			slider.LayoutOrder = innum 			slider.Parent = page.ScrollingFrame 			local button = slider.Frame.slide.TextButton 			local Mouse = game:GetService("Players").LocalPlayer:GetMouse() 			local totalsize = slider.Frame.slide.AbsoluteSize 			local dragtomouse,mousestart,slidestart = nil,Vector2.new(Mouse.X,Mouse.Y),slider.Frame.slide.Frame.slide.AbsoluteSize 			 			button.MouseButton1Down:Connect(function() 				if dragtomouse then 					dragtomouse:Disconnect() 					dragtomouse = nil 				end 				mousestart = Vector2.new(Mouse.X,Mouse.Y) 				slidestart = mousestart - (slider.Frame.slide.Frame.slide.AbsolutePosition) 				dragtomouse = game:GetService("RunService").Heartbeat:Connect(function() 					local mousepos = Vector2.new(Mouse.X,Mouse.Y) 					local diff = mousepos-mousestart 					local newsize = slidestart+diff 					local xratio = newsize.X/totalsize.X 					local sxratio = xratio 					if xratio < 0 then 						xratio = 0 					elseif xratio > 1 then 						xratio = 1 					end 					if sxratio < .02 then 						sxratio = .02 					elseif sxratio > 1 then 						sxratio = 1 					end 					slider.Frame.slide.Frame.slide.Size = UDim2.fromScale(sxratio,1) 					 					local amount = (xratio*((max-min)/inc)*inc)+min 					slider.Frame.slide.Frame.TextLabel.Text = math.floor(amount/inc)*inc 				end) 			end) 			 			local function disconnectdrag() 				if dragtomouse then 					dragtomouse:Disconnect() 					dragtomouse = nil 				end 			end 			 			 			game:GetService("UserInputService").InputEnded:Connect(function(input) 				if input.UserInputType == Enum.UserInputType.MouseButton1 then 					disconnectdrag() 				end 			end) 		end 		return plib 	end 	return glib end return lib
